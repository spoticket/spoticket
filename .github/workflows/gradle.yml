name: Deploy MSA Services

on:
  push:
    branches: [ "docker-composea" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - server
          - gateway
          - user
          - "team-stadium"
          - game
          - payment
          - ticket

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          if [ "${{matrix.service}}" = "team-stadium" ]; then
            cd ./com.spoticket.team-stadium
          else
            cd ./com.spoticket.${{matrix.service}}
          fi
          chmod +x ./gradlew
          ./gradlew clean build -x test

  Docker:
    name: Docker Build and Push
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Give execution permission to script
        run: chmod +x ./dockerTagAndPush.sh

      - name: Build and Push
        run: ./dockerTagAndPush.sh
        env:
          DOCKER_HUB_NAMESPACE: ${{ secrets.DOCKER_HUB_NAMESPACE }}

  Deploy:
    name: Deploy to EC2
    needs: Docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Copy docker-compose file to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose-prod.yml"
          target: "/home/ubuntu/spoticket"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/spoticket
            docker compose -f docker-compose-prod.yml down
            docker compose -f docker-compose-prod.yml pull
            docker compose -f docker-compose-prod.yml --env-file .env up -d